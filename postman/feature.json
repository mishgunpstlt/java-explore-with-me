{
	"info": {
		"_postman_id": "99631414-2cc3-4f13-bf52-75da91dc4e36",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42798816"
	},
	"item": [
		{
			"name": "Создание пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Тело содержит id и email\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.have.property('id');",
							"  pm.expect(jsonData).to.have.property('email');",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"userId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"{{randomEmail}}\",\n  \"name\": \"{{randomName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание категории",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Тело содержит id и name\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.have.property('id');",
							"  pm.expect(jsonData).to.have.property('name');",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"categoryId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{randomCategory}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/categories",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Тело содержит id и title\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.have.property('id');",
							"  pm.expect(jsonData).to.have.property('title');",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"eventId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"annotation\": \"Test annotation for event\",\n  \"category\": {{categoryId}},\n  \"description\": \"Test description for event with more than 20 chars\",\n  \"eventDate\": \"2030-01-01 12:00:00\",\n  \"location\": { \"lat\": 55.75, \"lon\": 37.61 },\n  \"paid\": false,\n  \"participantLimit\": 10,\n  \"requestModeration\": true,\n  \"title\": \"{{randomEvent}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId}}/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId}}",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Публикация события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Событие опубликовано\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.state).to.eql(\"PUBLISHED\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"stateAction\": \"PUBLISH_EVENT\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/{{eventId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"{{eventId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание комментария",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Комментарий содержит id и text\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.have.property('id');",
							"  pm.expect(jsonData).to.have.property('text');",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"commentId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\": \"{{randomComment}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId}}/events/{{eventId}}/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId}}",
						"events",
						"{{eventId}}",
						"comments"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Модерация комментария (PUBLISH)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Статус комментария изменился на PUBLISHED\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData[0].status).to.eql(\"PUBLISHED\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"comments\": [{{commentId}}],\n  \"status\": \"PUBLISHED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение комментариев события (public)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Ответ содержит массив комментариев\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an('array');",
							"  if (jsonData.length > 0) {",
							"    pm.expect(jsonData[0]).to.have.property('id');",
							"    pm.expect(jsonData[0]).to.have.property('text');",
							"  }",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/events/{{eventId}}/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"{{eventId}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание комментария для модерации",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Комментарий содержит id и text\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.have.property('id');",
							"  pm.expect(jsonData).to.have.property('text');",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"commentId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\": \"{{randomComment}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId}}/events/{{eventId}}/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId}}",
						"events",
						"{{eventId}}",
						"comments"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение комментариев админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Админ получает список комментариев\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.be.an('array');",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление комментария пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 204\", function () {",
							"  pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/{{userId}}/events/{{eventId}}/comments/{{commentId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId}}",
						"events",
						"{{eventId}}",
						"comments",
						"{{commentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание комментария (для удаления админом)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Комментарий содержит id и text\", function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData).to.have.property('id');",
							"  pm.expect(jsonData).to.have.property('text');",
							"});",
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"commentId\", jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\": \"Another {{randomComment}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/{{userId}}/events/{{eventId}}/comments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId}}",
						"events",
						"{{eventId}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление комментария админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Статус 204\", function () {",
							"  pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {},
						"requests": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/comments/{{commentId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"comments",
						"{{commentId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					"// Генерация уникальных данных для каждого прогона",
					"pm.environment.set(\"randomEmail\", \"user_\" + Date.now() + \"@example.com\");",
					"pm.environment.set(\"randomName\", \"User_\" + Date.now());",
					"pm.environment.set(\"randomCategory\", \"Category_\" + Date.now());",
					"pm.environment.set(\"randomEvent\", \"Event_\" + Date.now());",
					"pm.environment.set(\"randomComment\", \"Comment_\" + Date.now());"
				],
				"type": "text/javascript"
			}
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": "",
			"type": "default"
		},
		{
			"key": "eventId",
			"value": "",
			"type": "default"
		},
		{
			"key": "commentId",
			"value": "",
			"type": "default"
		}
	]
}